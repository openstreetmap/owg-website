# This file is used if building for Production environments
# It uses a multi-stage build to run jekyll to populate an nginx container

FROM ghcr.io/ruby/ruby:3.3 AS build

# Add Gem build requirements
RUN apt-get update && apt-get install -y \
  g++ \
  make \
  && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Add Gemfile and Gemfile.lock
ADD Gemfile* /app/

# Install Gems
RUN gem install bundler -v 2.6.9 \
    && bundle config build.nokogiri --use-system-libraries \
    && bundle config --global jobs $(nproc) \
    && bundle config set deployment 'true' \
    && bundle config set no-cache 'true' \
    && bundle install \
    && bundle clean

# Copy Site Files
COPY . .

ENV JEKYLL_ENV=production

# Run jekyll build site
RUN bundle exec jekyll build --verbose

#-------------------------------------------------
# https://github.com/nginx/docker-nginx-unprivileged
FROM ghcr.io/nginx/nginx-unprivileged:stable AS webserver

RUN echo "absolute_redirect off;" >/etc/nginx/conf.d/no-absolute_redirect.conf
RUN echo "gzip_static on; gzip_proxied any;" >/etc/nginx/conf.d/gzip_static.conf
# brotli_static not yet available in standard nginx distribution
# RUN echo "brotli_static on; brotli_proxied any;" >/etc/nginx/conf.d/brotli_static.conf

# Copy built site from build stage
COPY --from=build /app/_site /usr/share/nginx/html

# Test configuration during docker build
RUN nginx -t

# Port the container will listen on
EXPOSE 8080
